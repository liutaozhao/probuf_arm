This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Google C++ Testing Framework configure 1.8.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ../../../../third_party/googletest/googletest/configure --disable-option-checking --prefix=/home/liutao/install/protobuf-for-arm --build=i386-pc-linux-gnu --host=arm-linux-androideabi --target=arm-linux-androideabi --with-sysroot=/home/liutao/ndk_toolchain/arm-linux-androideabi/sysroot --with-protoc=/home/liutao/test/protobuf-3.6.1/protoc CFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe CXXFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe build_alias=i386-pc-linux-gnu host_alias=arm-linux-androideabi target_alias=arm-linux-androideabi CC=arm-linux-androideabi-gcc LIBS=-llog CXX=arm-linux-androideabi-g++ --cache-file=../../../arm-linux-androideabi.cache --srcdir=../../../../third_party/googletest/googletest

## --------- ##
## Platform. ##
## --------- ##

hostname = liutao-MS-7B33
uname -m = x86_64
uname -r = 4.15.0-43-generic
uname -s = Linux
uname -v = #46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games
PATH: /snap/bin
PATH: /usr/java/jdk1.8.0_191/bin
PATH: .
PATH: /home/liutao/install/android/android-studio/bin
PATH: /home/liutao/install/tool/pycharm-2018.3.2/bin
PATH: /usr/java/jdk1.8.0_191/bin
PATH: .
PATH: /home/liutao/install/android/android-studio/bin
PATH: /home/liutao/install/tool/pycharm-2018.3.2/bin
PATH: /home/liutao/ndk_toolchain/arm-linux-androideabi
PATH: /home/liutao/install/protobuf-for-arm/lib
PATH: /home/liutao/install/protobuf-for-arm/bin
PATH: /home/liutao/install/protobuf-for-arm/include
PATH: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2199: loading cache ../../../arm-linux-androideabi.cache
configure:2340: checking for a BSD-compatible install
configure:2408: result: /usr/bin/install -c
configure:2419: checking whether build environment is sane
configure:2474: result: yes
configure:2533: checking for arm-linux-androideabi-strip
configure:2560: result: arm-linux-androideabi-strip
configure:2625: checking for a thread-safe mkdir -p
configure:2664: result: /bin/mkdir -p
configure:2671: checking for gawk
configure:2698: result: mawk
configure:2709: checking whether make sets $(MAKE)
configure:2731: result: yes
configure:2760: checking whether make supports nested variables
configure:2777: result: yes
configure:2913: checking for arm-linux-androideabi-gcc
configure:2940: result: arm-linux-androideabi-gcc
configure:3209: checking for C compiler version
configure:3218: arm-linux-androideabi-gcc --version >&5
Android (4751641 based on r328903) clang version 7.0.2 (https://android.googlesource.com/toolchain/clang 003100370607242ddd5815e4a043907ea9004281) (https://android.googlesource.com/toolchain/llvm 1d739ffb0366421d383e04ff80ec2ee591315116) (based on LLVM 7.0.2svn)
Target: armv7a-none-linux-android16
Thread model: posix
InstalledDir: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin
configure:3229: $? = 0
configure:3218: arm-linux-androideabi-gcc -v >&5
Android (4751641 based on r328903) clang version 7.0.2 (https://android.googlesource.com/toolchain/clang 003100370607242ddd5815e4a043907ea9004281) (https://android.googlesource.com/toolchain/llvm 1d739ffb0366421d383e04ff80ec2ee591315116) (based on LLVM 7.0.2svn)
Target: armv7a-none-linux-android16
Thread model: posix
InstalledDir: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin
Found candidate GCC installation: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Selected GCC installation: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Candidate multilib: thumb;@mthumb
Candidate multilib: armv7-a;@march=armv7-a
Candidate multilib: armv7-a/thumb;@march=armv7-a@mthumb
Candidate multilib: .;
... rest of stderr output deleted ...
configure:3229: $? = 0
configure:3218: arm-linux-androideabi-gcc -V >&5
clang70: error: argument to '-V' is missing (expected 1 value)
clang70: error: no input files
configure:3229: $? = 1
configure:3218: arm-linux-androideabi-gcc -qversion >&5
clang70: error: unknown argument '-qversion', did you mean '--version'?
clang70: error: no input files
configure:3229: $? = 1
configure:3249: checking whether the C compiler works
configure:3271: arm-linux-androideabi-gcc -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe   conftest.c -llog >&5
configure:3275: $? = 0
configure:3323: result: yes
configure:3326: checking for C compiler default output file name
configure:3328: result: a.out
configure:3334: checking for suffix of executables
configure:3341: arm-linux-androideabi-gcc -o conftest -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe   conftest.c -llog >&5
configure:3345: $? = 0
configure:3367: result: 
configure:3389: checking whether we are cross compiling
configure:3427: result: yes
configure:3432: checking for suffix of object files
configure:3479: result: o
configure:3483: checking whether we are using the GNU C compiler
configure:3511: result: yes
configure:3520: checking whether arm-linux-androideabi-gcc accepts -g
configure:3581: result: yes
configure:3598: checking for arm-linux-androideabi-gcc option to accept ISO C89
configure:3674: result: none needed
configure:3699: checking whether arm-linux-androideabi-gcc understands -c and -o together
configure:3736: result: yes
configure:3764: checking for style of include used by make
configure:3792: result: GNU
configure:3818: checking dependency style of arm-linux-androideabi-gcc
configure:3929: result: gcc3
configure:4056: checking for C++ compiler version
configure:4065: arm-linux-androideabi-g++ --version >&5
Android (4751641 based on r328903) clang version 7.0.2 (https://android.googlesource.com/toolchain/clang 003100370607242ddd5815e4a043907ea9004281) (https://android.googlesource.com/toolchain/llvm 1d739ffb0366421d383e04ff80ec2ee591315116) (based on LLVM 7.0.2svn)
Target: armv7a-none-linux-android16
Thread model: posix
InstalledDir: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin
configure:4076: $? = 0
configure:4065: arm-linux-androideabi-g++ -v >&5
Android (4751641 based on r328903) clang version 7.0.2 (https://android.googlesource.com/toolchain/clang 003100370607242ddd5815e4a043907ea9004281) (https://android.googlesource.com/toolchain/llvm 1d739ffb0366421d383e04ff80ec2ee591315116) (based on LLVM 7.0.2svn)
Target: armv7a-none-linux-android16
Thread model: posix
InstalledDir: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin
Found candidate GCC installation: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Selected GCC installation: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin/../lib/gcc/arm-linux-androideabi/4.9.x
Candidate multilib: thumb;@mthumb
Candidate multilib: armv7-a;@march=armv7-a
Candidate multilib: armv7-a/thumb;@march=armv7-a@mthumb
Candidate multilib: .;
... rest of stderr output deleted ...
configure:4076: $? = 0
configure:4065: arm-linux-androideabi-g++ -V >&5
clang70++: error: argument to '-V' is missing (expected 1 value)
clang70++: error: no input files
configure:4076: $? = 1
configure:4065: arm-linux-androideabi-g++ -qversion >&5
clang70++: error: unknown argument '-qversion', did you mean '--version'?
clang70++: error: no input files
configure:4076: $? = 1
configure:4080: checking whether we are using the GNU C++ compiler
configure:4108: result: yes
configure:4117: checking whether arm-linux-androideabi-g++ accepts -g
configure:4178: result: yes
configure:4203: checking dependency style of arm-linux-androideabi-g++
configure:4314: result: gcc3
configure:4364: checking build system type
configure:4378: result: i386-pc-linux-gnu
configure:4398: checking host system type
configure:4411: result: arm-unknown-linux-androideabi
configure:4452: checking how to print strings
configure:4479: result: printf
configure:4500: checking for a sed that does not truncate output
configure:4564: result: /bin/sed
configure:4582: checking for grep that handles long lines and -e
configure:4640: result: /bin/grep
configure:4645: checking for egrep
configure:4707: result: /bin/grep -E
configure:4712: checking for fgrep
configure:4774: result: /bin/grep -F
configure:4809: checking for ld used by arm-linux-androideabi-gcc
configure:4876: result: arm-linux-androideabi-ld
configure:4883: checking if the linker (arm-linux-androideabi-ld) is GNU ld
configure:4898: result: yes
configure:4910: checking for BSD- or MS-compatible name lister (nm)
configure:4964: result: arm-linux-androideabi-nm
configure:5094: checking the name lister (arm-linux-androideabi-nm) interface
configure:5114: result: BSD nm
configure:5117: checking whether ln -s works
configure:5121: result: yes
configure:5129: checking the maximum length of command line arguments
configure:5260: result: 1572864
configure:5308: checking how to convert i386-pc-linux-gnu file names to arm-unknown-linux-androideabi format
configure:5348: result: func_convert_file_noop
configure:5355: checking how to convert i386-pc-linux-gnu file names to toolchain format
configure:5375: result: func_convert_file_noop
configure:5382: checking for arm-linux-androideabi-ld option to reload object files
configure:5389: result: -r
configure:5423: checking for arm-linux-androideabi-objdump
configure:5450: result: arm-linux-androideabi-objdump
configure:5522: checking how to recognize dependent libraries
configure:5722: result: pass_all
configure:5767: checking for arm-linux-androideabi-dlltool
configure:5797: result: no
configure:5807: checking for dlltool
configure:5837: result: no
configure:5867: checking how to associate runtime and link libraries
configure:5894: result: printf %s\n
configure:5911: checking for arm-linux-androideabi-ar
configure:5938: result: arm-linux-androideabi-ar
configure:6019: checking for archiver @FILE support
configure:6062: result: @
configure:6080: checking for arm-linux-androideabi-strip
configure:6107: result: arm-linux-androideabi-strip
configure:6179: checking for arm-linux-androideabi-ranlib
configure:6206: result: arm-linux-androideabi-strip
configure:6348: checking command to parse arm-linux-androideabi-nm output from arm-linux-androideabi-gcc object
configure:6618: result: ok
configure:6665: checking for sysroot
configure:6695: result: /home/liutao/ndk_toolchain/arm-linux-androideabi/sysroot
configure:6702: checking for a working dd
configure:6740: result: /bin/dd
configure:6744: checking how to truncate binary pipes
configure:6759: result: /bin/dd bs=4096 count=1
configure:7049: checking for arm-linux-androideabi-mt
configure:7079: result: no
configure:7089: checking for mt
configure:7116: result: mt
configure:7128: WARNING: using cross tools not prefixed with host triplet
configure:7139: checking if mt is a manifest tool
configure:7153: result: no
configure:7830: checking how to run the C preprocessor
configure:7900: result: arm-linux-androideabi-gcc -E
configure:7920: arm-linux-androideabi-gcc -E  conftest.c
configure:7920: $? = 0
configure:7934: arm-linux-androideabi-gcc -E  conftest.c
conftest.c:11:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:7934: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Google C++ Testing Framework"
| #define PACKAGE_TARNAME "gtest"
| #define PACKAGE_VERSION "1.8.0"
| #define PACKAGE_STRING "Google C++ Testing Framework 1.8.0"
| #define PACKAGE_BUGREPORT "googletestframework@googlegroups.com"
| #define PACKAGE_URL ""
| #define PACKAGE "gtest"
| #define VERSION "1.8.0"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:7963: checking for ANSI C header files
configure:8067: result: yes
configure:8080: checking for sys/types.h
configure:8080: result: yes
configure:8080: checking for sys/stat.h
configure:8080: result: yes
configure:8080: checking for stdlib.h
configure:8080: result: yes
configure:8080: checking for string.h
configure:8080: result: yes
configure:8080: checking for memory.h
configure:8080: result: yes
configure:8080: checking for strings.h
configure:8080: result: yes
configure:8080: checking for inttypes.h
configure:8080: result: yes
configure:8080: checking for stdint.h
configure:8080: result: yes
configure:8080: checking for unistd.h
configure:8080: result: yes
configure:8094: checking for dlfcn.h
configure:8094: result: yes
configure:8360: checking for objdir
configure:8375: result: .libs
configure:8639: checking if arm-linux-androideabi-gcc supports -fno-rtti -fno-exceptions
configure:8674: result: yes
configure:9032: checking for arm-linux-androideabi-gcc option to produce PIC
configure:9039: result: -fPIC -DPIC
configure:9047: checking if arm-linux-androideabi-gcc PIC flag -fPIC -DPIC works
configure:9082: result: yes
configure:9111: checking if arm-linux-androideabi-gcc static flag -static works
configure:9139: result: no
configure:9154: checking if arm-linux-androideabi-gcc supports -c -o file.o
configure:9201: result: yes
configure:9209: checking if arm-linux-androideabi-gcc supports -c -o file.o
configure:9256: result: yes
configure:9289: checking whether the arm-linux-androideabi-gcc linker (arm-linux-androideabi-ld) supports shared libraries
configure:10552: result: yes
configure:10589: checking whether -lc should be explicitly linked in
configure:10632: result: no
configure:10792: checking dynamic linker characteristics
configure:11622: result: Android linker
configure:11744: checking how to hardcode library paths into programs
configure:11769: result: immediate
configure:12317: checking whether stripping libraries is possible
configure:12322: result: yes
configure:12357: checking if libtool supports shared libraries
configure:12359: result: yes
configure:12362: checking whether to build shared libraries
configure:12387: result: yes
configure:12390: checking whether to build static libraries
configure:12394: result: yes
configure:12417: checking how to run the C++ preprocessor
configure:12483: result: arm-linux-androideabi-g++ -E
configure:12503: arm-linux-androideabi-g++ -E  conftest.cpp
configure:12503: $? = 0
configure:12517: arm-linux-androideabi-g++ -E  conftest.cpp
conftest.cpp:23:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:12517: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Google C++ Testing Framework"
| #define PACKAGE_TARNAME "gtest"
| #define PACKAGE_VERSION "1.8.0"
| #define PACKAGE_STRING "Google C++ Testing Framework 1.8.0"
| #define PACKAGE_BUGREPORT "googletestframework@googlegroups.com"
| #define PACKAGE_URL ""
| #define PACKAGE "gtest"
| #define VERSION "1.8.0"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:12679: checking for ld used by arm-linux-androideabi-g++
configure:12746: result: arm-linux-androideabi-ld
configure:12753: checking if the linker (arm-linux-androideabi-ld) is GNU ld
configure:12768: result: yes
configure:12823: checking whether the arm-linux-androideabi-g++ linker (arm-linux-androideabi-ld) supports shared libraries
configure:13896: result: yes
configure:13932: arm-linux-androideabi-g++ -c -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe  conftest.cpp >&5
configure:13935: $? = 0
configure:14416: checking for arm-linux-androideabi-g++ option to produce PIC
configure:14423: result: -fPIC -DPIC
configure:14431: checking if arm-linux-androideabi-g++ PIC flag -fPIC -DPIC works
configure:14466: result: yes
configure:14489: checking if arm-linux-androideabi-g++ static flag -static works
configure:14517: result: no
configure:14529: checking if arm-linux-androideabi-g++ supports -c -o file.o
configure:14576: result: yes
configure:14581: checking if arm-linux-androideabi-g++ supports -c -o file.o
configure:14628: result: yes
configure:14658: checking whether the arm-linux-androideabi-g++ linker (arm-linux-androideabi-ld) supports shared libraries
configure:14701: result: yes
configure:14842: checking dynamic linker characteristics
configure:15599: result: Android linker
configure:15664: checking how to hardcode library paths into programs
configure:15689: result: immediate
configure:15759: checking for python
configure:15777: found /usr/bin/python
configure:15790: result: /usr/bin/python
configure:15808: /usr/bin/python -c import sys # split strings by '.' and convert to numeric. Append some zeros # because we need at least 4 digits for the hex conversion. # map returns an iterator in Python 3.0 and a list in 2.x minver = list(map(int, '2.3'.split('.'))) + [0, 0, 0] minverhex = 0 # xrange is not present in Python 3.0 and range returns an iterator for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i] sys.exit(sys.hexversion < minverhex)
configure:15811: $? = 0
configure:16004: checking for the pthreads library -lpthreads
configure:16037: arm-linux-androideabi-gcc -o conftest -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe    conftest.c -lpthreads -llog >&5
/home/liutao/ndk_toolchain/arm-linux-androideabi/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lpthreads
clang70: error: linker command failed with exit code 1 (use -v to see invocation)
configure:16037: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Google C++ Testing Framework"
| #define PACKAGE_TARNAME "gtest"
| #define PACKAGE_VERSION "1.8.0"
| #define PACKAGE_STRING "Google C++ Testing Framework 1.8.0"
| #define PACKAGE_BUGREPORT "googletestframework@googlegroups.com"
| #define PACKAGE_URL ""
| #define PACKAGE "gtest"
| #define VERSION "1.8.0"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <pthread.h>
| int
| main ()
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:16046: result: no
configure:15949: checking whether pthreads work without any flags
configure:16037: arm-linux-androideabi-gcc -o conftest -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe    conftest.c  -llog >&5
configure:16037: $? = 0
configure:16046: result: yes
configure:16065: checking for joinable pthread attribute
configure:16080: arm-linux-androideabi-gcc -o conftest -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe    conftest.c  -llog >&5
configure:16080: $? = 0
configure:16086: result: PTHREAD_CREATE_JOINABLE
configure:16096: checking if more special flags are required for pthreads
configure:16103: result: no
configure:16192: checking whether to check for GCC pthread/shared inconsistencies
configure:16205: arm-linux-androideabi-gcc -o conftest -shared -fPIC -Wl,-z,defs -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe    conftest.c  -llog >&5
configure:16205: $? = 0
configure:16217: result: yes
configure:16223: checking whether -pthread is sufficient with -shared
configure:16238: arm-linux-androideabi-gcc -o conftest -shared -fPIC -Wl,-z,defs -march=armv7-a -O2 -DNDEBUG -fopenmp -pipe    conftest.c  -llog >&5
configure:16238: $? = 0
configure:16245: result: yes
configure:16450: updating cache ../../../arm-linux-androideabi.cache
configure:16494: checking that generated files are newer than configure
configure:16500: result: done
configure:16535: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by Google C++ Testing Framework config.status 1.8.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on liutao-MS-7B33

config.status:1158: creating Makefile
config.status:1158: creating scripts/gtest-config
config.status:1158: creating build-aux/config.h
config.status:1372: executing depfiles commands
config.status:1372: executing libtool commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i386-pc-linux-gnu
ac_cv_build_prog_CPP='gcc -E'
ac_cv_build_prog_CXXCPP='g++ -E'
ac_cv_build_prog_cc_g=yes
ac_cv_build_prog_cxx_g=yes
ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_cxx_hash_map='<unordered_map>'
ac_cv_cxx_hash_map_class=unordered_map
ac_cv_cxx_hash_namespace=std
ac_cv_cxx_hash_set='<unordered_set>'
ac_cv_cxx_hash_set_class=unordered_set
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=arm-linux-androideabi-gcc
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=set
ac_cv_env_CXXFLAGS_value='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
ac_cv_env_CXX_set=set
ac_cv_env_CXX_value=arm-linux-androideabi-g++
ac_cv_env_DIST_LANG_set=
ac_cv_env_DIST_LANG_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=set
ac_cv_env_LIBS_value=-llog
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_OBJCFLAGS_set=
ac_cv_env_OBJCFLAGS_value=
ac_cv_env_OBJC_set=
ac_cv_env_OBJC_value=
ac_cv_env_build_alias_set=set
ac_cv_env_build_alias_value=i386-pc-linux-gnu
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=arm-linux-androideabi
ac_cv_env_target_alias_set=set
ac_cv_env_target_alias_value=arm-linux-androideabi
ac_cv_func_ftruncate=yes
ac_cv_func_memcmp_working=no
ac_cv_func_memset=yes
ac_cv_func_mkdir=yes
ac_cv_func_pow=yes
ac_cv_func_strchr=yes
ac_cv_func_strerror=yes
ac_cv_func_strtod=no
ac_cv_func_strtol=yes
ac_cv_have_decl___SUNPRO_CC=no
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_limits_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_minix_config_h=no
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=arm-unknown-linux-androideabi
ac_cv_objc_compiler_gnu=yes
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_FGREP='/bin/grep -F'
ac_cv_path_GREP=/bin/grep
ac_cv_path_PYTHON=/usr/bin/python
ac_cv_path_SED=/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_lt_DD=/bin/dd
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AR=arm-linux-androideabi-ar
ac_cv_prog_AWK=mawk
ac_cv_prog_CC=arm-linux-androideabi-gcc
ac_cv_prog_CPP='arm-linux-androideabi-gcc -E'
ac_cv_prog_CXXCPP='arm-linux-androideabi-g++ -E'
ac_cv_prog_OBJC=arm-linux-androideabi-gcc
ac_cv_prog_OBJDUMP=arm-linux-androideabi-objdump
ac_cv_prog_RANLIB=arm-linux-androideabi-strip
ac_cv_prog_STRIP=arm-linux-androideabi-strip
ac_cv_prog_ac_ct_CC_FOR_BUILD=gcc
ac_cv_prog_ac_ct_CXX_FOR_BUILD=g++
ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_cxx_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_prog_objc_g=yes
ac_cv_safe_to_define___extensions__=yes
ac_cv_search_sched_yield='none required'
ac_cv_search_zlibVersion=-lz
ac_cv_target=arm-unknown-linux-androideabi
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_CXX_dependencies_compiler_type=gcc3
am_cv_OBJC_dependencies_compiler_type=gcc3
am_cv_ar_interface=ar
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes
am_cv_prog_tar_ustar=gnutar
ax_cv_PTHREAD_CLANG=yes
ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=no
ax_cv_PTHREAD_JOINABLE_ATTR=PTHREAD_CREATE_JOINABLE
ax_cv_PTHREAD_PRIO_INHERIT=yes
ax_cv_PTHREAD_SPECIAL_FLAGS=no
ax_cv_cxx_compile_cxx11=yes
lt_cv_ar_at_file=@
lt_cv_archive_cmds_need_lc=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=arm-linux-androideabi-ld
lt_cv_path_LDCXX=arm-linux-androideabi-ld
lt_cv_path_NM=arm-linux-androideabi-nm
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_CXX='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=no
lt_cv_prog_compiler_static_works_CXX=no
lt_cv_prog_gnu_ld=yes
lt_cv_prog_gnu_ldcxx=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
lt_cv_truncate_bin='/bin/dd bs=4096 count=1'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/missing aclocal-1.15'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
AR='arm-linux-androideabi-ar'
AUTOCONF='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/missing autoconf'
AUTOHEADER='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/missing autoheader'
AUTOMAKE='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/missing automake-1.15'
AWK='mawk'
CC='arm-linux-androideabi-gcc'
CCDEPMODE='depmode=gcc3'
CFLAGS='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
CPP='arm-linux-androideabi-gcc -E'
CPPFLAGS=''
CXX='arm-linux-androideabi-g++'
CXXCPP='arm-linux-androideabi-g++ -E'
CXXDEPMODE='depmode=gcc3'
CXXFLAGS='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLLTOOL='false'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EXEEXT=''
FGREP='/bin/grep -F'
GREP='/bin/grep'
HAVE_PTHREADS_FALSE='#'
HAVE_PTHREADS_TRUE=''
HAVE_PYTHON_FALSE='#'
HAVE_PYTHON_TRUE=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='arm-linux-androideabi-ld'
LDFLAGS=''
LIBOBJS=''
LIBS='-llog'
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
LT_SYS_LIBRARY_PATH=''
MAKEINFO='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/missing makeinfo'
MANIFEST_TOOL=':'
MKDIR_P='/bin/mkdir -p'
NM='arm-linux-androideabi-nm'
NMEDIT=''
OBJDUMP='arm-linux-androideabi-objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='gtest'
PACKAGE_BUGREPORT='googletestframework@googlegroups.com'
PACKAGE_NAME='Google C++ Testing Framework'
PACKAGE_STRING='Google C++ Testing Framework 1.8.0'
PACKAGE_TARNAME='gtest'
PACKAGE_URL=''
PACKAGE_VERSION='1.8.0'
PATH_SEPARATOR=':'
PTHREAD_CC='arm-linux-androideabi-gcc'
PTHREAD_CFLAGS=''
PTHREAD_LIBS=''
PYTHON='/usr/bin/python'
RANLIB='arm-linux-androideabi-strip'
SED='/bin/sed'
SET_MAKE=''
SHELL='/bin/bash'
STRIP='arm-linux-androideabi-strip'
VERSION='1.8.0'
ac_ct_AR=''
ac_ct_CC=''
ac_ct_CXX=''
ac_ct_DUMPBIN=''
acx_pthread_config=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__fastdepCXX_FALSE='#'
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=' -I$(srcdir)'
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='i386-pc-linux-gnu'
build_alias='i386-pc-linux-gnu'
build_cpu='i386'
build_os='linux-gnu'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='arm-unknown-linux-androideabi'
host_alias='arm-linux-androideabi'
host_cpu='arm'
host_os='linux-androideabi'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/googletest/build-aux/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/home/liutao/install/protobuf-for-arm'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias='arm-linux-androideabi'

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Google C++ Testing Framework"
#define PACKAGE_TARNAME "gtest"
#define PACKAGE_VERSION "1.8.0"
#define PACKAGE_STRING "Google C++ Testing Framework 1.8.0"
#define PACKAGE_BUGREPORT "googletestframework@googlegroups.com"
#define PACKAGE_URL ""
#define PACKAGE "gtest"
#define VERSION "1.8.0"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_PTHREAD 1

configure: exit 0
