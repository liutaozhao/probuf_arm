This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Google C++ Mocking and Testing Frameworks configure 1.8.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ../../../third_party/googletest/configure --disable-option-checking --prefix=/home/liutao/install/protobuf-for-arm --build=i386-pc-linux-gnu --host=arm-linux-androideabi --target=arm-linux-androideabi --with-sysroot=/home/liutao/ndk_toolchain/arm-linux-androideabi/sysroot --with-protoc=/home/liutao/test/protobuf-3.6.1/protoc CFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe CXXFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe build_alias=i386-pc-linux-gnu host_alias=arm-linux-androideabi target_alias=arm-linux-androideabi CC=arm-linux-androideabi-gcc LIBS=-llog CXX=arm-linux-androideabi-g++ --cache-file=../../arm-linux-androideabi.cache --srcdir=../../../third_party/googletest

## --------- ##
## Platform. ##
## --------- ##

hostname = liutao-MS-7B33
uname -m = x86_64
uname -r = 4.15.0-43-generic
uname -s = Linux
uname -v = #46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games
PATH: /snap/bin
PATH: /usr/java/jdk1.8.0_191/bin
PATH: .
PATH: /home/liutao/install/android/android-studio/bin
PATH: /home/liutao/install/tool/pycharm-2018.3.2/bin
PATH: /usr/java/jdk1.8.0_191/bin
PATH: .
PATH: /home/liutao/install/android/android-studio/bin
PATH: /home/liutao/install/tool/pycharm-2018.3.2/bin
PATH: /home/liutao/ndk_toolchain/arm-linux-androideabi
PATH: /home/liutao/install/protobuf-for-arm/lib
PATH: /home/liutao/install/protobuf-for-arm/bin
PATH: /home/liutao/install/protobuf-for-arm/include
PATH: /home/liutao/ndk_toolchain/arm-linux-androideabi/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1641: loading cache ../../arm-linux-androideabi.cache
configure:1778: checking for a BSD-compatible install
configure:1846: result: /usr/bin/install -c
configure:1857: checking whether build environment is sane
configure:1912: result: yes
configure:1971: checking for arm-linux-androideabi-strip
configure:1998: result: arm-linux-androideabi-strip
configure:2063: checking for a thread-safe mkdir -p
configure:2102: result: /bin/mkdir -p
configure:2109: checking for gawk
configure:2136: result: mawk
configure:2147: checking whether make sets $(MAKE)
configure:2169: result: yes
configure:2198: checking whether make supports nested variables
configure:2215: result: yes
configure:2488: checking that generated files are newer than configure
configure:2494: result: done
configure:2502: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by Google C++ Mocking and Testing Frameworks config.status 1.8.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on liutao-MS-7B33

config.status:745: creating Makefile
configure:3587: === configuring in googletest (/home/liutao/test/protobuf-3.6.1/build/third_party/googletest/googletest)
configure:3650: running /bin/bash ../../../../third_party/googletest/googletest/configure --disable-option-checking '--prefix=/home/liutao/install/protobuf-for-arm'  '--build=i386-pc-linux-gnu' '--host=arm-linux-androideabi' '--target=arm-linux-androideabi' '--with-sysroot=/home/liutao/ndk_toolchain/arm-linux-androideabi/sysroot' '--with-protoc=/home/liutao/test/protobuf-3.6.1/protoc' 'CFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe' 'CXXFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe' 'build_alias=i386-pc-linux-gnu' 'host_alias=arm-linux-androideabi' 'target_alias=arm-linux-androideabi' 'CC=arm-linux-androideabi-gcc' 'LIBS=-llog' 'CXX=arm-linux-androideabi-g++' --cache-file=../../../arm-linux-androideabi.cache --srcdir=../../../../third_party/googletest/googletest
configure:3587: === configuring in googlemock (/home/liutao/test/protobuf-3.6.1/build/third_party/googletest/googlemock)
configure:3650: running /bin/bash ../../../../third_party/googletest/googlemock/configure --disable-option-checking '--prefix=/home/liutao/install/protobuf-for-arm'  '--build=i386-pc-linux-gnu' '--host=arm-linux-androideabi' '--target=arm-linux-androideabi' '--with-sysroot=/home/liutao/ndk_toolchain/arm-linux-androideabi/sysroot' '--with-protoc=/home/liutao/test/protobuf-3.6.1/protoc' 'CFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe' 'CXXFLAGS=-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe' 'build_alias=i386-pc-linux-gnu' 'host_alias=arm-linux-androideabi' 'target_alias=arm-linux-androideabi' 'CC=arm-linux-androideabi-gcc' 'LIBS=-llog' 'CXX=arm-linux-androideabi-g++' --cache-file=../../../arm-linux-androideabi.cache --srcdir=../../../../third_party/googletest/googlemock

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i386-pc-linux-gnu
ac_cv_build_prog_CPP='gcc -E'
ac_cv_build_prog_CXXCPP='g++ -E'
ac_cv_build_prog_cc_g=yes
ac_cv_build_prog_cxx_g=yes
ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_cxx_hash_map='<unordered_map>'
ac_cv_cxx_hash_map_class=unordered_map
ac_cv_cxx_hash_namespace=std
ac_cv_cxx_hash_set='<unordered_set>'
ac_cv_cxx_hash_set_class=unordered_set
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=arm-linux-androideabi-gcc
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=set
ac_cv_env_CXXFLAGS_value='-march=armv7-a -O2 -DNDEBUG -fopenmp -pipe'
ac_cv_env_CXX_set=set
ac_cv_env_CXX_value=arm-linux-androideabi-g++
ac_cv_env_DIST_LANG_set=
ac_cv_env_DIST_LANG_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=set
ac_cv_env_LIBS_value=-llog
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_OBJCFLAGS_set=
ac_cv_env_OBJCFLAGS_value=
ac_cv_env_OBJC_set=
ac_cv_env_OBJC_value=
ac_cv_env_build_alias_set=set
ac_cv_env_build_alias_value=i386-pc-linux-gnu
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=arm-linux-androideabi
ac_cv_env_target_alias_set=set
ac_cv_env_target_alias_value=arm-linux-androideabi
ac_cv_func_ftruncate=yes
ac_cv_func_memcmp_working=no
ac_cv_func_memset=yes
ac_cv_func_mkdir=yes
ac_cv_func_pow=yes
ac_cv_func_strchr=yes
ac_cv_func_strerror=yes
ac_cv_func_strtod=no
ac_cv_func_strtol=yes
ac_cv_have_decl___SUNPRO_CC=no
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_limits_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_minix_config_h=no
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=arm-unknown-linux-androideabi
ac_cv_objc_compiler_gnu=yes
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_FGREP='/bin/grep -F'
ac_cv_path_GREP=/bin/grep
ac_cv_path_SED=/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_lt_DD=/bin/dd
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AR=arm-linux-androideabi-ar
ac_cv_prog_AWK=mawk
ac_cv_prog_CC=arm-linux-androideabi-gcc
ac_cv_prog_CPP='arm-linux-androideabi-gcc -E'
ac_cv_prog_CXXCPP='arm-linux-androideabi-g++ -E'
ac_cv_prog_OBJC=arm-linux-androideabi-gcc
ac_cv_prog_OBJDUMP=arm-linux-androideabi-objdump
ac_cv_prog_RANLIB=arm-linux-androideabi-strip
ac_cv_prog_STRIP=arm-linux-androideabi-strip
ac_cv_prog_ac_ct_CC_FOR_BUILD=gcc
ac_cv_prog_ac_ct_CXX_FOR_BUILD=g++
ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_cxx_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_prog_objc_g=yes
ac_cv_safe_to_define___extensions__=yes
ac_cv_search_sched_yield='none required'
ac_cv_search_zlibVersion=-lz
ac_cv_target=arm-unknown-linux-androideabi
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_CXX_dependencies_compiler_type=gcc3
am_cv_OBJC_dependencies_compiler_type=gcc3
am_cv_ar_interface=ar
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes
am_cv_prog_tar_ustar=gnutar
ax_cv_PTHREAD_CLANG=yes
ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=no
ax_cv_PTHREAD_JOINABLE_ATTR=PTHREAD_CREATE_JOINABLE
ax_cv_PTHREAD_PRIO_INHERIT=yes
ax_cv_PTHREAD_SPECIAL_FLAGS=no
ax_cv_cxx_compile_cxx11=yes
lt_cv_ar_at_file=@
lt_cv_archive_cmds_need_lc=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=arm-linux-androideabi-ld
lt_cv_path_LDCXX=arm-linux-androideabi-ld
lt_cv_path_NM=arm-linux-androideabi-nm
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_CXX='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=no
lt_cv_prog_compiler_static_works_CXX=no
lt_cv_prog_gnu_ld=yes
lt_cv_prog_gnu_ldcxx=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
lt_cv_truncate_bin='/bin/dd bs=4096 count=1'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/missing aclocal-1.15'
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
AUTOCONF='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/missing autoconf'
AUTOHEADER='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/missing autoheader'
AUTOMAKE='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/missing automake-1.15'
AWK='mawk'
CYGPATH_W='echo'
DEFS='-DPACKAGE_NAME=\"Google\ C++\ Mocking\ and\ Testing\ Frameworks\" -DPACKAGE_TARNAME=\"googletest\" -DPACKAGE_VERSION=\"1.8.0\" -DPACKAGE_STRING=\"Google\ C++\ Mocking\ and\ Testing\ Frameworks\ 1.8.0\" -DPACKAGE_BUGREPORT=\"googlemock@googlegroups.com\" -DPACKAGE_URL=\"\" -DPACKAGE=\"googletest\" -DVERSION=\"1.8.0\"'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LIBOBJS=''
LIBS='-llog'
LTLIBOBJS=''
MAKEINFO='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/missing makeinfo'
MKDIR_P='/bin/mkdir -p'
PACKAGE='googletest'
PACKAGE_BUGREPORT='googlemock@googlegroups.com'
PACKAGE_NAME='Google C++ Mocking and Testing Frameworks'
PACKAGE_STRING='Google C++ Mocking and Testing Frameworks 1.8.0'
PACKAGE_TARNAME='googletest'
PACKAGE_URL=''
PACKAGE_VERSION='1.8.0'
PATH_SEPARATOR=':'
SET_MAKE=''
SHELL='/bin/bash'
STRIP='arm-linux-androideabi-strip'
VERSION='1.8.0'
am__isrc=' -I$(srcdir)'
am__leading_dot='.'
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build_alias='i386-pc-linux-gnu'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias='arm-linux-androideabi'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/liutao/test/protobuf-3.6.1/third_party/googletest/build-aux/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/home/liutao/install/protobuf-for-arm'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
subdirs=' googletest googlemock'
sysconfdir='${prefix}/etc'
target_alias='arm-linux-androideabi'

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Google C++ Mocking and Testing Frameworks"
#define PACKAGE_TARNAME "googletest"
#define PACKAGE_VERSION "1.8.0"
#define PACKAGE_STRING "Google C++ Mocking and Testing Frameworks 1.8.0"
#define PACKAGE_BUGREPORT "googlemock@googlegroups.com"
#define PACKAGE_URL ""
#define PACKAGE "googletest"
#define VERSION "1.8.0"

configure: exit 0
